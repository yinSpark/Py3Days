# 冒泡排序算法

# 算法思想
# 依次比较相邻的两个数，将小数放在前面，大数放在后面。
# 即在第一趟：首先比较第1个和第2个数，将小数放前，大数放后。
# 然后比较第2个数和第3个数，将小数放前，大数放后，如此继续，直至比较最后两个数，将小数放前，大数放后。
# 重复第一趟步骤，直至全部排序完成。

# 算法分析
# a = [1, 15, 12, 3, 56, 42, 7, 10]
# 第一趟排序,交换5次, 得到56
# 1, 15, 12, 3, 56, 42
# 1, 12, 15, 3, 56, 42
# 1, 12, 3, 15, 56, 42
# 1, 12, 3, 15, 56, 42
# 1, 12, 3, 15, 42, 56
# 第二趟排序,交换4次,得到42, 56
# 1, 12, 3, 15, 42, 56
# 1, 3, 12, 15, 42, 56
# 1, 3, 12, 15, 42, 56
# 1, 3, 12, 15, 42, 56
# 第三趟排序,交换3次,得到15, 42, 56
# 1, 3, 12, 15, 42, 56
# 1, 3, 12, 15, 42, 56
# 1, 3, 12, 15, 42, 56
# 第四趟排序,交换2次,得到12, 15, 42, 56
# 1, 3, 12, 15, 42, 56
# 1, 3, 12, 15, 42, 56
# 第五趟排序,交换1次,得到3, 12, 15, 42, 56
# 1, 3, 12, 15, 42, 56

# 总结: n个数字排列进行n-1趟排序,每i趟比较n-i次

# 算法实现---冒泡排序

from random import randint

#  生成一个随机array
def random_array(n):
    '''
    :param n: number
    :return: array
    :description: Generate a random array
    '''
    return [randint(0, 50) for _ in range(n)]

def bubble_sort(a):
    le = len(a)
    # 例如le=6, 则进行5趟le-1,取值0-4
    # i=0比较5次,le-i-1=5, 取值0-4
    for i in range(le-1):
        for j in range(le-1-i):
            if a[j] > a[j+1]:
                a[j], a[j+1] = a[j+1], a[j]
        print("第{}趟排序: {}".format(i, a))

    print("最终升序排序结果: {}".format(a))

if __name__ == '__main__':
    arr = random_array(10)
    bubble_sort(arr)
